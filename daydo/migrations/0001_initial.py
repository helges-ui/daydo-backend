# Generated by Django 4.2.25 on 2025-10-28 20:46

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('role', models.CharField(choices=[('PARENT', 'Parent'), ('CHILD_USER', 'Child User')], max_length=15)),
                ('email', models.EmailField(blank=True, help_text='Optional for CHILD_USER', max_length=254, null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(message='Enter a valid phone number', regex='^\\+?1?\\d{9,15}$')])),
                ('avatar', models.CharField(blank=True, help_text='Icon reference', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['first_name', 'last_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Family',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text="The customizable family name (e.g., 'The Smiths')", max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Families',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ChildUserPermissions',
            fields=[
                ('user', models.OneToOneField(limit_choices_to={'role': 'CHILD_USER'}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('can_invite_parent', models.BooleanField(default=False, help_text='Can invite other parents')),
                ('can_delete_child_profile', models.BooleanField(default=False, help_text='Can delete child profiles')),
                ('can_access_admin_settings', models.BooleanField(default=False, help_text='Can access family settings')),
                ('can_delete_all_tasks', models.BooleanField(default=False, help_text='Can delete tasks not assigned to them')),
                ('can_create_tasks', models.BooleanField(default=False, help_text='Can create new tasks')),
                ('can_edit_task_details', models.BooleanField(default=False, help_text='Can edit task titles and descriptions')),
                ('can_send_messages', models.BooleanField(default=False, help_text='Can send messages to family members')),
                ('can_view_family_calendar', models.BooleanField(default=False, help_text='Can view family calendar')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Child User Permissions',
                'verbose_name_plural': 'Child User Permissions',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='family',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='daydo.family'),
        ),
        migrations.AddField(
            model_name='user',
            name='groups',
            field=models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
        migrations.CreateModel(
            name='ChildProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=50)),
                ('last_name', models.CharField(blank=True, max_length=50)),
                ('is_view_only', models.BooleanField(default=True, help_text='True for CHILD_VIEW, False for CHILD_USER')),
                ('avatar', models.CharField(blank=True, help_text='Icon reference', max_length=20)),
                ('birth_date', models.DateField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('family', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='child_profiles', to='daydo.family')),
                ('linked_user', models.OneToOneField(blank=True, limit_choices_to={'role': 'CHILD_USER'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='child_profile', to=settings.AUTH_USER_MODEL)),
                ('manager', models.ForeignKey(limit_choices_to={'role': 'PARENT'}, on_delete=django.db.models.deletion.CASCADE, related_name='managed_child_profiles', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Child Profile',
                'verbose_name_plural': 'Child Profiles',
                'ordering': ['first_name', 'last_name'],
                'unique_together': {('family', 'first_name', 'last_name')},
            },
        ),
    ]
